version: 2.1

commands:
    # Command based on instructions from CircleCI blog for avoiding fork secret leakage or failures
    # https://circleci.com/blog/managing-secrets-when-you-have-pull-requests-from-outside-contributors/
    early-return-forks:
        description: >-
          If this build is from a fork, stop executing the current job and return success.
          This is useful to avoid steps that will fail due to missing credentials.
        steps:
            - run:
                name: Early return if this build is from a forked PR
                command: |
                    if [ -n "$CIRCLE_PR_NUMBER" ]; then
                        echo "Nothing to do for forked PRs, so marking this step successful"
                        circleci step halt
                    fi

    install-and-test:
        description: >-
            Install everything required to run the test suite, then run it.
        steps:
            - checkout
            - restore_cache:
                key: dependency-cache-{{ checksum "package.json" }}
            - run:
                name: Update npm
                command: 'sudo npm install -g npm@latest'
            - run:
                name: Install npm dependencies
                command: npm install
            - save_cache:
                key: dependency-cache-{{ checksum "package.json" }}
                paths:
                    - node_modules
            - run: 
                name: Tests
                command: npx jest --ci --coverage
            - early-return-forks
            - run: 
                name: Report Coverage
                command: npx coveralls < coverage/lcov.info

jobs:
    node-latest:
        docker:
            - image: circleci/node:latest
        steps:
            - install-and-test

    node-11:
        docker:
            - image: circleci/node:11
        steps:
            - install-and-test

    node-10:
        docker:
            - image: circleci/node:10
        steps:
            - install-and-test

    node-8:
        docker:
            - image: circleci/node:8
        steps:
            - install-and-test

    build-docker:
        machine: true
        steps:
            - checkout
            - run: docker run --rm -i hadolint/hadolint < Dockerfile
            - run: docker build -t speccy:$CIRCLE_SHA1 .

    push-docker:
        machine: true
        steps:
            - checkout
            - run: docker build -t speccy:$CIRCLE_SHA1 .
            - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
            - run: docker tag speccy:$CIRCLE_SHA1 wework/speccy:nightly
            - run: if [ "$CIRCLE_TAG" != "" ]; then docker tag speccy:$CIRCLE_SHA1 wework/speccy:latest; fi;
            - run: if [ "$CIRCLE_TAG" != "" ]; then docker tag speccy:$CIRCLE_SHA1 wework/speccy:$CIRCLE_TAG; fi;
            - run: docker push wework/speccy

workflows:
    version: 2
    commit:
        jobs:
            - node-latest
            - node-11
            - node-10
            - node-8
            - build-docker

    deploy:
        jobs:
            - push-docker:
                filters:
                    branches:
                        only: master
                    tags:
                        only: /.*/

